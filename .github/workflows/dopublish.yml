name: Publish Binaries
on:
  push:
    # Sequence of  patterns matched against refs/tags
    tags:
      - 'v*.*.*'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set env for version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        # run: RELEASE_VERSION=${GITHUB_REF#refs/*/}
      - name: Switch to release branch
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch
          git checkout release
      - name: Setting up dir
        run: mkdir -p build/tmp 
      - name: Generate artifacts
        run: |
          zip -rj ./build/tmp/besman-latest.zip ./dist/list.txt ./src/main/bash/besman-* ./src/main/bash/envs/besman-* ./src/main/bash/commands/besman-*
          cp ./build/tmp/besman-latest.zip ./build/tmp/besman-$RELEASE_VERSION.zip
          mv ./scripts/get.besman.io ./build/tmp/
          ls ./build/tmp/
      - name: Switch to dist and push
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch
          git checkout dist --
          git checkout release -- ./build/tmp/*
          mv ./build/tmp/ ./dist/
          git commit -m "Released the version $RELEASE_VERSION"
          git push origin -f -u dist
      # - name: Copy To Branches Action
      #   uses: planetoftheweb/copy-to-branches@v1
      #   env:
      #     key: release
      #     files: ./build/tmp/*

      # - name: Copy artifacts to dist and push
      #   env:
      #     SOURCE_BRANCH: 'release'
      #     TARGET_BRANCH: 'dist'
      #   run: |
      #     # files=$(find ./build/tmp/ -type f) # get the file list
      #     # echo $files
      #     git config --global user.name 'GitHub Action'
      #     git config --global user.email 'action@github.com'
      #     git fetch                         # fetch branches
      #     git checkout $TARGET_BRANCH --      # checkout to your branch
      #     mkdir -p dist
      #     git checkout ${SOURCE_BRANCH} -- ./build/tmp/
      #     echo "listing"
      #     ls 
      #     mv ./build/tmp/ ./dist/
      #     git add ./dist/*
      #     git commit -m "Released the version $RELEASE_VERSION"
      #     git push origin -f -u dist

      # - name: Test
      #   run: |
      #     echo $RELEASE_VERSION
      #     echo ${{ env.RELEASE_VERSION }}